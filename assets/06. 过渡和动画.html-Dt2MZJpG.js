import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as o,b as t,e as n,d as a,r as l,o as d}from"./app-Cw3dfNnn.js";const c={},p={href:"https://cn.vuejs.org/v2/guide/transitions.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%87%E6%B8%A1%E7%9A%84%E7%B1%BB%E5%90%8D",target:"_blank",rel:"noopener noreferrer"};function m(g,e){const r=l("ExternalLinkIcon");return d(),s("div",null,[e[3]||(e[3]=o('<h1 id="内置组件transition" tabindex="-1"><a class="header-anchor" href="#内置组件transition"><span>内置组件Transition</span></a></h1><blockquote><p>官网详细文档：https://cn.vuejs.org/v2/guide/transitions.html</p></blockquote><h2 id="时机" tabindex="-1"><a class="header-anchor" href="#时机"><span>时机</span></a></h2><p><code>Transition</code>组件会监控<code>slot</code>中<strong>唯一</strong>根元素的出现和消失，并会在其出现和消失时应用过渡效果</p><p>具体的监听内容是：</p><ul><li>它会对新旧两个虚拟节点进行对比，如果旧节点被销毁，则应用消失效果，如果新节点是新增的，则应用进入效果</li><li>如果不是上述情况，则它会对比新旧节点，观察其<code>v-show</code>是否变化，<code>true-&gt;false</code>应用消失效果，<code>false-&gt;true</code>应用进入效果</li></ul><h2 id="流程" tabindex="-1"><a class="header-anchor" href="#流程"><span>流程</span></a></h2>',7)),t("blockquote",null,[e[2]||(e[2]=o("<p>类名规则：</p><ol><li>如果<code>transition</code>上没有定义<code>name</code>，则类名为<code>v-xxxx</code></li><li>如果<code>transition</code>上定义了<code>name</code>，则类名为<code>${name}-xxxx</code></li><li>如果指定了类名，直接使用指定的类名</li></ol>",2)),t("p",null,[e[1]||(e[1]=n("指定类名见：")),t("a",p,[e[0]||(e[0]=n("自定义过渡类名")),a(r)])])]),e[4]||(e[4]=o('<p><strong>1. 进入效果</strong></p><p><img src="http://mdrs.yuanjin.tech/img/20210309212357.png" alt=""></p><p><strong>2. 消失效果</strong></p><p><img src="http://mdrs.yuanjin.tech/img/20210309213426.png" alt="image-20210309213426958"></p><h2 id="过渡组" tabindex="-1"><a class="header-anchor" href="#过渡组"><span>过渡组</span></a></h2><p><code>Transision</code>可以监控其内部的<strong>单个dom元素</strong>的出现和消失，并为其附加样式</p><p>如果要监控一个dom列表，就需要使用<code>TransitionGroup</code>组件</p><p>它会对列表的新增元素应用<strong>进入效果</strong>，删除元素应用<strong>消失效果</strong>，对被移动的元素应用<code>v-move</code>样式</p><blockquote><p>被移动的元素之所以能够实现过渡效果，是因为<code>TransisionGroup</code>内部使用了Flip过渡方案</p></blockquote>',9))])}const x=i(c,[["render",m],["__file","06. 过渡和动画.html.vue"]]),f=JSON.parse('{"path":"/interview/Vue/06.%20%E8%BF%87%E6%B8%A1%E5%92%8C%E5%8A%A8%E7%94%BB.html","title":"内置组件Transition","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"时机","slug":"时机","link":"#时机","children":[]},{"level":2,"title":"流程","slug":"流程","link":"#流程","children":[]},{"level":2,"title":"过渡组","slug":"过渡组","link":"#过渡组","children":[]}],"git":{"createdTime":1753164176000,"updatedTime":1753164176000,"contributors":[{"name":"三月崽崽","email":"1745786806@qq.com","commits":1}]},"readingTime":{"minutes":1.24,"words":372},"filePathRelative":"interview/Vue/06. 过渡和动画.md","localizedDate":"2025年7月22日"}');export{x as comp,f as data};
